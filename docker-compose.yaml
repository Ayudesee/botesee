version: "3.8"

services:
  postgres:
    container_name: "postgres"
    image: postgres:15.0
    restart: always
    user: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bot
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 60s
      retries: 5

  rabbit:
    container_name: "rabbit"
    build: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 3s
      timeout: 60s
      retries: 20

  discord-bot:
    container_name: "discord-bot"
    build:
      context: .
      target: discord-bot
    restart: always
    depends_on:
      rabbit:
        condition: service_healthy

  web:
    container_name: "web"
    build:
      context: .
      target: web
    restart: always
    ports:
      - "5000:8080"
    volumes:
      - type: bind
        source: ./errors.log
        target: /app/errors.log

  celery:
    container_name: "celery"
    build:
      context: .
      target: celery
    restart: always
    depends_on:
      rabbit:
        condition: service_healthy
