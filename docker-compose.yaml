version: "3.8"

services:
  postgres:
    container_name: botesee_postgres
    image: postgres:15.0
    restart: on-failure
    user: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 60s
      retries: 60

  rabbit:
    container_name: botesee_rabbit
    image: rabbitmq:3.11.8-management
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_listener 5672
      interval: 3s
      timeout: 60s
      retries: 20

  discord-bot:
    container_name: botesee_discord
    build:
      context: .
      target: discord-bot
    restart: on-failure
    env_file:
      - ".env"
    depends_on:
      rabbit:
        condition: service_healthy
      redis:
        condition: service_healthy
    tty: true

  web:
    container_name: botesee_web
    build:
      context: .
      target: web
    restart: on-failure
    env_file:
      - ".env"
    ports:
      - "5000:5000"
    volumes:
      - type: bind
        source: ./errors.log
        target: /app/errors.log
      - type: bind
        source: ./src
        target: /botesee/src
    tty: true

  celery:
    container_name: botesee_celery
    build:
      context: .
      target: celery
    restart: on-failure
    env_file:
      - ".env"
    depends_on:
      rabbit:
        condition: service_healthy
    tty: true

  flower:
    image: mher/flower
    container_name: botesee_flower
    command: celery flower --persistent=True
    environment:
      - CELERY_BROKER_URL=amqp://${RABBIT_USER}:${RABBIT_PASSWORD}@${RABBIT_HOST}:${RABBIT_PORT}
      - FLOWER_PORT=5555
    ports:
    - "5555:5555"
    depends_on:
      rabbit:
        condition: service_healthy

  redis:
    image: redis:7.2.1
    container_name: botesee_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
